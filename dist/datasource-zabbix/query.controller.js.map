{"version":3,"sources":["../../src/datasource-zabbix/query.controller.js"],"names":["QueryCtrl","_","c","utils","metricFunctions","migrations","ZabbixQueryController","$scope","$injector","$rootScope","$sce","templateSrv","zabbix","datasource","replaceTemplateVars","editorModes","value","text","mode","MODE_METRICS","MODE_TEXT","MODE_ITEMID","editorMode","METRICS","TEXT","ITEMID","slaPropertyList","name","property","getGroupNames","bind","getMetricNames","getHostNames","getApplicationNames","getItemNames","getITServices","getVariables","getTemplateVariables","$on","onVariableChange","onTargetBlur","init","target","migrate","scopeDefaults","metric","oldTarget","cloneDeep","queryOptionsText","renderQueryOptionsText","defaults","targetDefaults","functions","map","func","createFuncInstance","def","params","initFilters","MODE_ITSERVICE","slaProperty","suggestITServices","itemtype","find","Promise","all","suggestGroups","suggestHosts","suggestApps","suggestItems","metricList","addAllValue","metrics","uniq","forEach","variables","unshift","variable","getAllGroups","then","groupList","groups","groupFilter","group","filter","getAllHosts","hostList","hosts","hostFilter","host","getAllApps","appList","apps","appFilter","application","options","showDisabledItems","getAllItems","itemList","items","getITService","itServiceList","itservices","str","isRegex","isTemplateVariable","newTarget","isEqual","targetChanged","isContainsVariables","some","field","parseTarget","panelCtrl","refresh","funcDef","newFunc","added","push","moveAliasFuncLast","length","without","aliasFunc","showQueryOptions","optionsMap","forOwn","key","join","templateUrl"],"mappings":"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","file":"query.controller.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport * as c from './constants';\r\nimport * as utils from './utils';\r\nimport * as metricFunctions from './metricFunctions';\r\nimport * as migrations from './migrations';\r\n\r\nimport './add-metric-function.directive';\r\nimport './metric-function-editor.directive';\r\n\r\nimport './css/query-editor.css!';\r\n\r\nexport class ZabbixQueryController extends QueryCtrl {\r\n\r\n  // ZabbixQueryCtrl constructor\r\n  constructor($scope, $injector, $rootScope, $sce, templateSrv) {\r\n    super($scope, $injector);\r\n    this.zabbix = this.datasource.zabbix;\r\n\r\n    // Use custom format for template variables\r\n    this.replaceTemplateVars = this.datasource.replaceTemplateVars;\r\n    this.templateSrv = templateSrv;\r\n\r\n    this.editorModes = [\r\n      {value: 'num',       text: 'Metrics',     mode: c.MODE_METRICS},\r\n      {value: 'text',      text: 'Text',        mode: c.MODE_TEXT},\r\n      {value: 'itemid',    text: 'Item ID',     mode: c.MODE_ITEMID}\r\n    ];\r\n\r\n    this.$scope.editorMode = {\r\n      METRICS: c.MODE_METRICS,\r\n      TEXT: c.MODE_TEXT,\r\n      ITEMID: c.MODE_ITEMID\r\n    };\r\n\r\n    this.slaPropertyList = [\r\n      {name: \"Status\", property: \"status\"},\r\n      {name: \"SLA\", property: \"sla\"},\r\n      {name: \"OK time\", property: \"okTime\"},\r\n      {name: \"Problem time\", property: \"problemTime\"},\r\n      {name: \"Down time\", property: \"downtimeTime\"}\r\n    ];\r\n\r\n    // Map functions for bs-typeahead\r\n    this.getGroupNames = _.bind(this.getMetricNames, this, 'groupList');\r\n    this.getHostNames = _.bind(this.getMetricNames, this, 'hostList', true);\r\n    this.getApplicationNames = _.bind(this.getMetricNames, this, 'appList');\r\n    this.getItemNames = _.bind(this.getMetricNames, this, 'itemList');\r\n    this.getITServices = _.bind(this.getMetricNames, this, 'itServiceList');\r\n    this.getVariables = _.bind(this.getTemplateVariables, this);\r\n\r\n    // Update metric suggestion when template variable was changed\r\n    $rootScope.$on('template-variable-value-updated', () => this.onVariableChange());\r\n\r\n    // Update metrics when item selected from dropdown\r\n    $scope.$on('typeahead-updated', () => {\r\n      this.onTargetBlur();\r\n    });\r\n\r\n    this.init = function() {\r\n      var target = this.target;\r\n\r\n      // Migrate old targets\r\n      target = migrations.migrate(target);\r\n\r\n      var scopeDefaults = {\r\n        metric: {},\r\n        oldTarget: _.cloneDeep(this.target),\r\n        queryOptionsText: this.renderQueryOptionsText()\r\n      };\r\n      _.defaults(this, scopeDefaults);\r\n\r\n      // Load default values\r\n      var targetDefaults = {\r\n        'mode': c.MODE_METRICS,\r\n        'group': { 'filter': \"\" },\r\n        'host': { 'filter': \"\" },\r\n        'application': { 'filter': \"\" },\r\n        'item': { 'filter': \"\" },\r\n        'functions': [],\r\n        'options': {\r\n          'showDisabledItems': false\r\n        }\r\n      };\r\n      _.defaults(target, targetDefaults);\r\n\r\n      // Create function instances from saved JSON\r\n      target.functions = _.map(target.functions, function(func) {\r\n        return metricFunctions.createFuncInstance(func.def, func.params);\r\n      });\r\n\r\n      if (target.mode === c.MODE_METRICS ||\r\n          target.mode === c.MODE_TEXT) {\r\n\r\n        this.initFilters();\r\n      }\r\n      else if (target.mode === c.MODE_ITSERVICE) {\r\n        _.defaults(target, {slaProperty: {name: \"SLA\", property: \"sla\"}});\r\n        this.suggestITServices();\r\n      }\r\n    };\r\n\r\n    this.init();\r\n  }\r\n\r\n  initFilters() {\r\n    let itemtype = _.find(this.editorModes, {'mode': this.target.mode});\r\n    itemtype = itemtype ? itemtype.value : null;\r\n    return Promise.all([\r\n      this.suggestGroups(),\r\n      this.suggestHosts(),\r\n      this.suggestApps(),\r\n      this.suggestItems(itemtype)\r\n    ]);\r\n  }\r\n\r\n  // Get list of metric names for bs-typeahead directive\r\n  getMetricNames(metricList, addAllValue) {\r\n    let metrics = _.uniq(_.map(this.metric[metricList], 'name'));\r\n\r\n    // Add template variables\r\n    _.forEach(this.templateSrv.variables, variable => {\r\n      metrics.unshift('$' + variable.name);\r\n    });\r\n\r\n    if (addAllValue) {\r\n      metrics.unshift('/.*/');\r\n    }\r\n\r\n    return metrics;\r\n  }\r\n\r\n  getTemplateVariables() {\r\n    return _.map(this.templateSrv.variables, variable => {\r\n      return '$' + variable.name;\r\n    });\r\n  }\r\n\r\n  suggestGroups() {\r\n    return this.zabbix.getAllGroups()\r\n    .then(groups => {\r\n      this.metric.groupList = groups;\r\n      return groups;\r\n    });\r\n  }\r\n\r\n  suggestHosts() {\r\n    let groupFilter = this.replaceTemplateVars(this.target.group.filter);\r\n    return this.zabbix.getAllHosts(groupFilter)\r\n    .then(hosts => {\r\n      this.metric.hostList = hosts;\r\n      return hosts;\r\n    });\r\n  }\r\n\r\n  suggestApps() {\r\n    let groupFilter = this.replaceTemplateVars(this.target.group.filter);\r\n    let hostFilter = this.replaceTemplateVars(this.target.host.filter);\r\n    return this.zabbix.getAllApps(groupFilter, hostFilter)\r\n    .then(apps => {\r\n      this.metric.appList = apps;\r\n      return apps;\r\n    });\r\n  }\r\n\r\n  suggestItems(itemtype = 'num') {\r\n    let groupFilter = this.replaceTemplateVars(this.target.group.filter);\r\n    let hostFilter = this.replaceTemplateVars(this.target.host.filter);\r\n    let appFilter = this.replaceTemplateVars(this.target.application.filter);\r\n    let options = {\r\n      itemtype: itemtype,\r\n      showDisabledItems: this.target.options.showDisabledItems\r\n    };\r\n\r\n    return this.zabbix\r\n    .getAllItems(groupFilter, hostFilter, appFilter, options)\r\n    .then(items => {\r\n      this.metric.itemList = items;\r\n      return items;\r\n    });\r\n  }\r\n\r\n  suggestITServices() {\r\n    return this.zabbix.getITService()\r\n    .then(itservices => {\r\n      this.metric.itServiceList = itservices;\r\n      return itservices;\r\n    });\r\n  }\r\n\r\n  isRegex(str) {\r\n    return utils.isRegex(str);\r\n  }\r\n\r\n  isVariable(str) {\r\n    return utils.isTemplateVariable(str, this.templateSrv.variables);\r\n  }\r\n\r\n  onTargetBlur() {\r\n    var newTarget = _.cloneDeep(this.target);\r\n    if (!_.isEqual(this.oldTarget, this.target)) {\r\n      this.oldTarget = newTarget;\r\n      this.targetChanged();\r\n    }\r\n  }\r\n\r\n  onVariableChange() {\r\n    if (this.isContainsVariables()) {\r\n      this.targetChanged();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check query for template variables\r\n   */\r\n  isContainsVariables() {\r\n    return _.some(['group', 'host', 'application'], field => {\r\n      if (this.target[field] && this.target[field].filter) {\r\n        return utils.isTemplateVariable(this.target[field].filter, this.templateSrv.variables);\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  parseTarget() {\r\n    // Parse target\r\n  }\r\n\r\n  // Validate target and set validation info\r\n  validateTarget() {\r\n    // validate\r\n  }\r\n\r\n  targetChanged() {\r\n    this.initFilters();\r\n    this.parseTarget();\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  addFunction(funcDef) {\r\n    var newFunc = metricFunctions.createFuncInstance(funcDef);\r\n    newFunc.added = true;\r\n    this.target.functions.push(newFunc);\r\n\r\n    this.moveAliasFuncLast();\r\n\r\n    if (newFunc.params.length && newFunc.added ||\r\n        newFunc.def.params.length === 0) {\r\n      this.targetChanged();\r\n    }\r\n  }\r\n\r\n  removeFunction(func) {\r\n    this.target.functions = _.without(this.target.functions, func);\r\n    this.targetChanged();\r\n  }\r\n\r\n  moveAliasFuncLast() {\r\n    var aliasFunc = _.find(this.target.functions, function(func) {\r\n      return func.def.name === 'alias' ||\r\n        func.def.name === 'aliasByNode' ||\r\n        func.def.name === 'aliasByMetric';\r\n    });\r\n\r\n    if (aliasFunc) {\r\n      this.target.functions = _.without(this.target.functions, aliasFunc);\r\n      this.target.functions.push(aliasFunc);\r\n    }\r\n  }\r\n\r\n  toggleQueryOptions() {\r\n    this.showQueryOptions = !this.showQueryOptions;\r\n  }\r\n\r\n  onQueryOptionChange() {\r\n    this.queryOptionsText = this.renderQueryOptionsText();\r\n    this.onTargetBlur();\r\n  }\r\n\r\n  renderQueryOptionsText() {\r\n    var optionsMap = {\r\n      showDisabledItems: \"Show disabled items\"\r\n    };\r\n    var options = [];\r\n    _.forOwn(this.target.options, (value, key) => {\r\n      if (value) {\r\n        if (value === true) {\r\n          // Show only option name (if enabled) for boolean options\r\n          options.push(optionsMap[key]);\r\n        } else {\r\n          // Show \"option = value\" for another options\r\n          options.push(optionsMap[key] + \" = \" + value);\r\n        }\r\n      }\r\n    });\r\n    return \"Options: \" + options.join(', ');\r\n  }\r\n\r\n  /**\r\n   * Switch query editor to specified mode.\r\n   * Modes:\r\n   *  0 - items\r\n   *  1 - IT services\r\n   *  2 - Text metrics\r\n   */\r\n  switchEditorMode(mode) {\r\n    this.target.mode = mode;\r\n    this.init();\r\n    this.targetChanged();\r\n  }\r\n}\r\n\r\n// Set templateUrl as static property\r\nZabbixQueryController.templateUrl = 'datasource-zabbix/partials/query.editor.html';\r\n"]}