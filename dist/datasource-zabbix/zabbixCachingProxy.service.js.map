{"version":3,"sources":["../../src/datasource-zabbix/zabbixCachingProxy.service.js"],"names":["ZabbixCachingProxyFactory","ZabbixCachingProxy","zabbixAPI","zabbixDBConnector","cacheOptions","dbConnector","cacheEnabled","enabled","ttl","cache","groups","hosts","applications","items","history","trends","macros","globalMacros","itServices","historyPromises","getHistory","callAPIRequestOnce","_","bind","getHistoryRequestHash","getHistoryDB","getDBQueryHash","getTrendsDB","getTrends","groupPromises","getGroupsOnce","getGroups","getRequestHash","hostPromises","getHostsOnce","getHosts","appPromises","getAppsOnce","getApps","itemPromises","getItemsOnce","getItems","itemByIdPromises","getItemsByIdOnce","getItemsByIDs","itServicesPromises","getITServicesOnce","getITService","macroPromises","getMacrosOnce","getMacros","globalMacroPromises","getGlobalMacrosOnce","getGlobalMacros","cacheObject","object_age","Date","now","timestamp","request","params","hash","isExpired","Promise","resolve","value","then","result","proxyRequest","groupids","hostids","appids","itemtype","itemids","promises","all","flatten","time_from","time_till","historyStorage","full_history","expired","filter","keyBy","item","itemid","length","grouped_history","groupBy","forEach","map","func","promiseKeeper","argsHashFunc","arguments","apply","args","requestStamp","arg","undefined","isArray","sort","toString","join","getHash","stamp","consolidateBy","intervalMs","angular","module","factory","String","prototype","i","chr","len","charCodeAt","indexBy"],"mappings":"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","file":"zabbixCachingProxy.service.js","sourcesContent":["import angular from 'angular';\r\nimport _ from 'lodash';\r\n\r\n// Use factory() instead service() for multiple datasources support.\r\n// Each datasource instance must initialize its own cache.\r\n\r\n/** @ngInject */\r\nfunction ZabbixCachingProxyFactory() {\r\n\r\n  class ZabbixCachingProxy {\r\n    constructor(zabbixAPI, zabbixDBConnector, cacheOptions) {\r\n      this.zabbixAPI = zabbixAPI;\r\n      this.dbConnector = zabbixDBConnector;\r\n      this.cacheEnabled = cacheOptions.enabled;\r\n      this.ttl          = cacheOptions.ttl || 600000; // 10 minutes by default\r\n\r\n      // Internal objects for data storing\r\n      this.cache = {\r\n        groups: {},\r\n        hosts: {},\r\n        applications: {},\r\n        items: {},\r\n        history: {},\r\n        trends: {},\r\n        macros: {},\r\n        globalMacros: {},\r\n        itServices: {}\r\n      };\r\n\r\n      this.historyPromises = {};\r\n\r\n      // Don't run duplicated history requests\r\n      this.getHistory = callAPIRequestOnce(_.bind(this.zabbixAPI.getHistory, this.zabbixAPI),\r\n                                           this.historyPromises, getHistoryRequestHash);\r\n\r\n      if (this.dbConnector) {\r\n        this.getHistoryDB = callAPIRequestOnce(_.bind(this.dbConnector.getHistory, this.dbConnector),\r\n                                               this.historyPromises, getDBQueryHash);\r\n        this.getTrendsDB = callAPIRequestOnce(_.bind(this.dbConnector.getTrends, this.dbConnector),\r\n                                              this.historyPromises, getDBQueryHash);\r\n      }\r\n\r\n      // Don't run duplicated requests\r\n      this.groupPromises = {};\r\n      this.getGroupsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getGroups, this.zabbixAPI),\r\n                                              this.groupPromises, getRequestHash);\r\n\r\n      this.hostPromises = {};\r\n      this.getHostsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getHosts, this.zabbixAPI),\r\n                                             this.hostPromises, getRequestHash);\r\n\r\n      this.appPromises = {};\r\n      this.getAppsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getApps, this.zabbixAPI),\r\n                                            this.appPromises, getRequestHash);\r\n\r\n      this.itemPromises = {};\r\n      this.getItemsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getItems, this.zabbixAPI),\r\n                                             this.itemPromises, getRequestHash);\r\n\r\n      this.itemByIdPromises = {};\r\n      this.getItemsByIdOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getItemsByIDs, this.zabbixAPI),\r\n                                                 this.itemPromises, getRequestHash);\r\n\r\n      this.itServicesPromises = {};\r\n      this.getITServicesOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getITService, this.zabbixAPI),\r\n                                                  this.itServicesPromises, getRequestHash);\r\n\r\n      this.macroPromises = {};\r\n      this.getMacrosOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getMacros, this.zabbixAPI),\r\n                                             this.macroPromises, getRequestHash);\r\n\r\n      this.globalMacroPromises = {};\r\n      this.getGlobalMacrosOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getGlobalMacros, this.zabbixAPI),\r\n                                                    this.globalMacroPromises, getRequestHash);\r\n    }\r\n\r\n    isExpired(cacheObject) {\r\n      if (cacheObject) {\r\n        let object_age = Date.now() - cacheObject.timestamp;\r\n        return !(cacheObject.timestamp && object_age < this.ttl);\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Check that result is present in cache and up to date\r\n     * or send request to API.\r\n     */\r\n    proxyRequest(request, params, cacheObject) {\r\n      let hash = getRequestHash(params);\r\n      if (this.cacheEnabled && !this.isExpired(cacheObject[hash])) {\r\n        return Promise.resolve(cacheObject[hash].value);\r\n      } else {\r\n        return request(...params)\r\n        .then(result => {\r\n          cacheObject[hash] = {\r\n            value: result,\r\n            timestamp: Date.now()\r\n          };\r\n          return result;\r\n        });\r\n      }\r\n    }\r\n\r\n    getGroups() {\r\n      return this.proxyRequest(this.getGroupsOnce, [], this.cache.groups);\r\n    }\r\n\r\n    getHosts(groupids) {\r\n      return this.proxyRequest(this.getHostsOnce, [groupids], this.cache.hosts);\r\n    }\r\n\r\n    getApps(hostids) {\r\n      return this.proxyRequest(this.getAppsOnce, [hostids], this.cache.applications);\r\n    }\r\n\r\n    getItems(hostids, appids, itemtype) {\r\n      let params = [hostids, appids, itemtype];\r\n      return this.proxyRequest(this.getItemsOnce, params, this.cache.items);\r\n    }\r\n\r\n    getItemsByIDs(itemids) {\r\n      let params = [itemids];\r\n      return this.proxyRequest(this.getItemsByIdOnce, params, this.cache.items);\r\n    }\r\n\r\n    getITServices() {\r\n      return this.proxyRequest(this.getITServicesOnce, [], this.cache.itServices);\r\n    }\r\n\r\n    getMacros(hostids) {\r\n      // Merge global macros and host macros\r\n      let promises = [\r\n        this.proxyRequest(this.getMacrosOnce, [hostids], this.cache.macros),\r\n        this.proxyRequest(this.getGlobalMacrosOnce, [], this.cache.globalMacros)\r\n      ];\r\n\r\n      return Promise.all(promises).then(_.flatten);\r\n    }\r\n\r\n    getHistoryFromCache(items, time_from, time_till) {\r\n      var historyStorage = this.cache.history;\r\n      var full_history;\r\n      var expired = _.filter(_.keyBy(items, 'itemid'), (item, itemid) => {\r\n        return !historyStorage[itemid];\r\n      });\r\n      if (expired.length) {\r\n        return this.zabbixAPI.getHistory(expired, time_from, time_till).then(function(history) {\r\n          var grouped_history = _.groupBy(history, 'itemid');\r\n          _.forEach(expired, item => {\r\n            var itemid = item.itemid;\r\n            historyStorage[itemid] = item;\r\n            historyStorage[itemid].time_from = time_from;\r\n            historyStorage[itemid].time_till = time_till;\r\n            historyStorage[itemid].history = grouped_history[itemid];\r\n          });\r\n          full_history = _.map(items, item => {\r\n            return historyStorage[item.itemid].history;\r\n          });\r\n          return _.flatten(full_history, true);\r\n        });\r\n      } else {\r\n        full_history = _.map(items, function(item) {\r\n          return historyStorage[item.itemid].history;\r\n        });\r\n        return Promise.resolve(_.flatten(full_history, true));\r\n      }\r\n    }\r\n\r\n    getHistoryFromAPI(items, time_from, time_till) {\r\n      return this.zabbixAPI.getHistory(items, time_from, time_till);\r\n    }\r\n  }\r\n\r\n  return ZabbixCachingProxy;\r\n}\r\n\r\nangular\r\n  .module('grafana.services')\r\n  .factory('ZabbixCachingProxy', ZabbixCachingProxyFactory);\r\n\r\n/**\r\n * Wrap zabbix API request to prevent multiple calls\r\n * with same params when waiting for result.\r\n */\r\nfunction callAPIRequestOnce(func, promiseKeeper, argsHashFunc) {\r\n  return function() {\r\n    var hash = argsHashFunc(arguments);\r\n    if (!promiseKeeper[hash]) {\r\n      promiseKeeper[hash] = Promise.resolve(\r\n        func.apply(this, arguments)\r\n        .then(result => {\r\n          promiseKeeper[hash] = null;\r\n          return result;\r\n        })\r\n      );\r\n    }\r\n    return promiseKeeper[hash];\r\n  };\r\n}\r\n\r\nfunction getRequestHash(args) {\r\n  var requestStamp = _.map(args, arg => {\r\n    if (arg === undefined) {\r\n      return 'undefined';\r\n    } else {\r\n      if (_.isArray(arg)) {\r\n        return arg.sort().toString();\r\n      } else {\r\n        return arg.toString();\r\n      }\r\n    }\r\n  }).join();\r\n  return requestStamp.getHash();\r\n}\r\n\r\nfunction getHistoryRequestHash(args) {\r\n  let itemids = _.map(args[0], 'itemid');\r\n  let stamp = itemids.join() + args[1] + args[2];\r\n  return stamp.getHash();\r\n}\r\n\r\nfunction getDBQueryHash(args) {\r\n  let itemids = _.map(args[0], 'itemid');\r\n  let consolidateBy = args[3].consolidateBy;\r\n  let intervalMs = args[3].intervalMs;\r\n  let stamp = itemids.join() + args[1] + args[2] + consolidateBy + intervalMs;\r\n  return stamp.getHash();\r\n}\r\n\r\nString.prototype.getHash = function() {\r\n  var hash = 0, i, chr, len;\r\n  if (this.length !== 0) {\r\n    for (i = 0, len = this.length; i < len; i++) {\r\n      chr   = this.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n  }\r\n  return hash;\r\n};\r\n\r\n// Fix for backward compatibility with lodash 2.4\r\nif (!_.keyBy) {_.keyBy = _.indexBy;}\r\n"]}