{"version":3,"sources":["../../src/panel-triggers/module.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","loadPluginCss","PanelCtrl","triggerPanelEditor","dark","light","defaultSeverity","priority","severity","color","show","panelDefaults","datasource","group","host","application","hostField","statusField","severityField","lastChangeField","ageField","infoField","limit","showTriggers","hideHostsInMaintenance","sortTriggersBy","text","value","showEvents","triggerSeverity","okEventColor","ackEventColor","scroll","pageSize","fontSize","triggerStatusMap","defaultTimeFormat","TriggerPanelCtrl","$scope","$injector","$element","datasourceSrv","templateSrv","contextSrv","dashboardSrv","pageIndex","triggerList","currentTriggersPage","defaults","panel","cloneDeep","events","on","onInitEditMode","bind","onRefresh","addEditorTab","otherPanelInFullscreenMode","error","loading","refreshData","then","slice","getCurrentTriggersPage","render","getTriggers","getAcknowledges","get","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","map","formatTrigger","eventids","lastEvent","eventid","each","event","find","acknowledges","timestamp","unix","ack","clock","customLastChangeFormat","time","format","lastChangeFormat","user","alias","name","surname","markAckEvents","length","sortBy","reverse","triggerObj","lastchangeUnix","Number","lastchange","age","fromNow","hosts","hostTechName","showComment","message","grafana_user","ack_message","zabbixAPI","acknowledgeEvent","startPos","endPos","Math","min","scope","elem","attrs","ctrl","data","pageCount","getTableHeight","panelHeight","height","switchPage","e","el","currentTarget","parseInt","$apply","renderPanel","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","panelElem","parents","rootElem","css","addClass","unbindDestroy","$on","off","renderData","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8WA,WAASA,eAAT,CAAwBC,QAAxB,EAAkCC,aAAlC,EAAiD;AAC/C,QAAIC,MAAMC,OAAN,CAAcF,aAAd,CAAJ,EAAkC;AAChC,aAAOG,EAAEC,MAAF,CAASL,QAAT,EAAmB,UAASM,OAAT,EAAkB;AAC1C,eAAOJ,MAAMK,UAAN,CAAiBN,aAAjB,EAAgCO,IAAhC,CAAqCF,QAAQG,WAA7C,CAAP;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,aAAOL,EAAEC,MAAF,CAASL,QAAT,EAAmB,UAASM,OAAT,EAAkB;AAC1C,eAAOA,QAAQG,WAAR,KAAwBR,aAA/B;AACD,OAFM,CAAP;AAGD;AACF;;;;AA3WMG,O;;AACAM,O;;AACAC,Y;;AACCC,mB,kBAAAA,a;AAEAC,e,kBAAAA,S;;AADIX,W;;AAEJY,wB,WAAAA,kB;;;;;;;;;;;;;;;;;;;;;AAnBR;;;;;;;;;;;;;AAsBAF,oBAAc;AACZG,cAAM,wDADM;AAEZC,eAAO;AAFK,OAAd;;AAKIC,qB,GAAkB,CACpB,EAAEC,UAAU,CAAZ,EAAeC,UAAU,gBAAzB,EAA4CC,OAAO,SAAnD,EAA8DC,MAAM,IAApE,EADoB,EAEpB,EAAEH,UAAU,CAAZ,EAAeC,UAAU,aAAzB,EAA4CC,OAAO,SAAnD,EAA8DC,MAAM,IAApE,EAFoB,EAGpB,EAAEH,UAAU,CAAZ,EAAeC,UAAU,SAAzB,EAA4CC,OAAO,SAAnD,EAA8DC,MAAM,IAApE,EAHoB,EAIpB,EAAEH,UAAU,CAAZ,EAAeC,UAAU,SAAzB,EAA4CC,OAAO,SAAnD,EAA8DC,MAAM,IAApE,EAJoB,EAKpB,EAAEH,UAAU,CAAZ,EAAeC,UAAU,MAAzB,EAA4CC,OAAO,SAAnD,EAA8DC,MAAM,IAApE,EALoB,EAMpB,EAAEH,UAAU,CAAZ,EAAeC,UAAU,UAAzB,EAA4CC,OAAO,SAAnD,EAA8DC,MAAM,IAApE,EANoB,C;AASlBC,mB,GAAgB;AAClBC,oBAAY,IADM;AAElBvB,kBAAU;AACRwB,iBAAO,EAACnB,QAAQ,EAAT,EADC;AAERoB,gBAAM,EAACpB,QAAQ,EAAT,EAFE;AAGRqB,uBAAa,EAACrB,QAAQ,EAAT,EAHL;AAIRC,mBAAS,EAACD,QAAQ,EAAT;AAJD,SAFQ;AAQlBsB,mBAAW,IARO;AASlBC,qBAAa,KATK;AAUlBC,uBAAe,KAVG;AAWlBC,yBAAiB,IAXC;AAYlBC,kBAAU,IAZQ;AAalBC,mBAAW,KAbO;AAclBC,eAAO,EAdW;AAelBC,sBAAc,cAfI;AAgBlBC,gCAAwB,KAhBN;AAiBlBC,wBAAgB,EAAEC,MAAM,aAAR,EAAuBC,OAAO,YAA9B,EAjBE;AAkBlBC,oBAAY,EAAEF,MAAM,UAAR,EAAoBC,OAAO,GAA3B,EAlBM;AAmBlBE,yBAAiBvB,eAnBC;AAoBlBwB,sBAAc,yBApBI;AAqBlBC,uBAAe,kBArBG;AAsBlBC,gBAAQ,IAtBU;AAuBlBC,kBAAU,EAvBQ;AAwBlBC,kBAAU;AAxBQ,O;AA2BhBC,sB,GAAmB;AACrB,aAAK,IADgB;AAErB,aAAK;AAFgB,O;AAKnBC,uB,GAAoB,sB;;uDAElBC,gB;;;AAEJ;AACA,kCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAwDC,WAAxD,EAAqEC,UAArE,EAAiFC,YAAjF,EAA+F;AAAA;;AAAA,0IACvFN,MADuF,EAC/EC,SAD+E;;AAE7F,gBAAKE,aAAL,GAAqBA,aAArB;AACA,gBAAKC,WAAL,GAAmBA,WAAnB;AACA,gBAAKC,UAAL,GAAkBA,UAAlB;AACA,gBAAKC,YAAL,GAAoBA,YAApB;;AAEA,gBAAKT,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKC,iBAAL,GAAyBA,iBAAzB;AACA,gBAAKS,SAAL,GAAiB,CAAjB;AACA,gBAAKC,WAAL,GAAmB,EAAnB;AACA,gBAAKC,mBAAL,GAA2B,EAA3B;;AAEA;AACA;AACA;AACAtD,YAAEuD,QAAF,CAAW,MAAKC,KAAhB,EAAuBxD,EAAEyD,SAAF,CAAYvC,aAAZ,CAAvB;;AAEA,gBAAKwC,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,MAAKG,SAAL,CAAeD,IAAf,OAA1B;AAnB6F;AAoB9F;;;;2CAEgB;AACf,iBAAKE,YAAL,CAAkB,SAAlB,EAA6BrD,kBAA7B,EAAiD,CAAjD;AACD;;;sCAEW;AAAA;;AACV;AACA,gBAAI,KAAKsD,0BAAL,EAAJ,EAAuC;AAAE;AAAS;;AAElD;AACA,mBAAO,KAAKC,KAAZ;AACA,iBAAKC,OAAL,GAAe,IAAf;;AAEA,mBAAO,KAAKC,WAAL,GACNC,IADM,CACD,uBAAe;AACnB;AACA,qBAAKf,WAAL,GAAoBA,YAAYgB,KAAZ,CAAkB,CAAlB,EAAqB,OAAKb,KAAL,CAAW3B,KAAhC,CAApB;;AAEA,qBAAKyC,sBAAL;;AAEA;AACA,qBAAKJ,OAAL,GAAe,KAAf;;AAEA,qBAAKK,MAAL,CAAY,OAAKlB,WAAjB;AACD,aAXM,CAAP;AAYD;;;wCAEa;AACZ,mBAAO,KAAKmB,WAAL,GACNJ,IADM,CACD,KAAKK,eAAL,CAAqBZ,IAArB,CAA0B,IAA1B,CADC,EAENO,IAFM,CAED,KAAKzE,cAAL,CAAoBkE,IAApB,CAAyB,IAAzB,CAFC,CAAP;AAGD;;;wCAEa;AAAA;;AACZ,mBAAO,KAAKb,aAAL,CAAmB0B,GAAnB,CAAuB,KAAKlB,KAAL,CAAWrC,UAAlC,EACNiD,IADM,CACD,sBAAc;AAClB,kBAAIO,SAASxD,WAAWwD,MAAxB;AACA,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKxD,UAAL,GAAkBA,UAAlB;AACA,kBAAIgB,aAAa,OAAKqB,KAAL,CAAWrB,UAAX,CAAsBD,KAAvC;AACA,kBAAIrC,gBAAgB,OAAK2D,KAAL,CAAW5D,QAA/B;AACA,kBAAImC,yBAAyB,OAAKyB,KAAL,CAAWzB,sBAAxC;;AAEA;AACA,kBAAI6C,cAAczD,WAAW0D,mBAAX,CAA+BhF,cAAcuB,KAAd,CAAoBnB,MAAnD,CAAlB;AACA,kBAAI6E,aAAa3D,WAAW0D,mBAAX,CAA+BhF,cAAcwB,IAAd,CAAmBpB,MAAlD,CAAjB;AACA,kBAAI8E,YAAY5D,WAAW0D,mBAAX,CAA+BhF,cAAcyB,WAAd,CAA0BrB,MAAzD,CAAhB;;AAEA,kBAAI+E,kBAAkB;AACpBlD,8BAAcK,UADM;AAEpBJ,wCAAwBA;AAFJ,eAAtB;;AAKA,qBAAO4C,OAAOH,WAAP,CAAmBI,WAAnB,EAAgCE,UAAhC,EAA4CC,SAA5C,EAAuDC,eAAvD,CAAP;AACD,aApBM,EAqBNZ,IArBM,CAqBD,oBAAY;AAChB,qBAAOpE,EAAEiF,GAAF,CAAMrF,QAAN,EAAgB,OAAKsF,aAAL,CAAmBrB,IAAnB,QAAhB,CAAP;AACD,aAvBM,CAAP;AAwBD;;;0CAEeR,W,EAAa;AAAA;;AAC3B;AACA,gBAAI8B,WAAWnF,EAAEiF,GAAF,CAAM5B,WAAN,EAAmB,mBAAW;AAC3C,qBAAOnD,QAAQkF,SAAR,CAAkBC,OAAzB;AACD,aAFc,CAAf;;AAIA,mBAAO,KAAKV,MAAL,CAAYF,eAAZ,CAA4BU,QAA5B,EACNf,IADM,CACD,kBAAU;;AAEd;AACApE,gBAAEsF,IAAF,CAAOjC,WAAP,EAAoB,mBAAW;AAC7B,oBAAIkC,QAAQvF,EAAEwF,IAAF,CAAO9B,MAAP,EAAe,iBAAS;AAClC,yBAAO6B,MAAMF,OAAN,KAAkBnF,QAAQkF,SAAR,CAAkBC,OAA3C;AACD,iBAFW,CAAZ;;AAIA,oBAAIE,KAAJ,EAAW;AACTrF,0BAAQuF,YAAR,GAAuBzF,EAAEiF,GAAF,CAAMM,MAAME,YAAZ,EAA0B,eAAO;AACtD,wBAAIC,YAAYnF,OAAOoF,IAAP,CAAYC,IAAIC,KAAhB,CAAhB;AACA,wBAAI,OAAKrC,KAAL,CAAWsC,sBAAf,EAAuC;AACrCF,0BAAIG,IAAJ,GAAWL,UAAUM,MAAV,CAAiB,OAAKxC,KAAL,CAAWyC,gBAA5B,CAAX;AACD,qBAFD,MAEO;AACLL,0BAAIG,IAAJ,GAAWL,UAAUM,MAAV,CAAiB,OAAKrD,iBAAtB,CAAX;AACD;AACDiD,wBAAIM,IAAJ,GAAWN,IAAIO,KAAJ,GAAY,IAAZ,GAAmBP,IAAIQ,IAAvB,GAA8B,GAA9B,GAAoCR,IAAIS,OAAxC,GAAkD,GAA7D;AACA,2BAAOT,GAAP;AACD,mBATsB,CAAvB;;AAWA;AACA,sBAAI,OAAKpC,KAAL,CAAW8C,aAAX,IAA4BpG,QAAQuF,YAAR,CAAqBc,MAArD,EAA6D;AAC3DrG,4BAAQc,KAAR,GAAgB,OAAKwC,KAAL,CAAWlB,aAA3B;AACD;AACF;AACF,eAtBD;;AAwBA,qBAAOe,WAAP;AACD,aA7BM,CAAP;AA8BD;;;yCAEcA,W,EAAa;AAAA;;AAC1B;AACA,gBAAIxD,gBAAgB,KAAK2D,KAAL,CAAW5D,QAAX,CAAoBM,OAApB,CAA4BD,MAAhD;AACAJ,4BAAgB,KAAKsB,UAAL,CAAgB0D,mBAAhB,CAAoChF,aAApC,CAAhB;AACA,gBAAIA,aAAJ,EAAmB;AACjBwD,4BAAc1D,gBAAe0D,WAAf,EAA4BxD,aAA5B,CAAd;AACD;;AAED;AACA,gBAAI,KAAK2D,KAAL,CAAW1B,YAAX,KAA4B,gBAAhC,EAAkD;AAChDuB,4BAAcrD,EAAEC,MAAF,CAASoD,WAAT,EAAsB,mBAAW;AAC7C,uBAAO,CAACnD,QAAQuF,YAAhB;AACD,eAFa,CAAd;AAGD,aAJD,MAIO,IAAI,KAAKjC,KAAL,CAAW1B,YAAX,KAA4B,cAAhC,EAAgD;AACrDuB,4BAAcrD,EAAEC,MAAF,CAASoD,WAAT,EAAsB,cAAtB,CAAd;AACD,aAFM,MAEA;AACLA,4BAAcA,WAAd;AACD;;AAED;AACAA,0BAAcrD,EAAEC,MAAF,CAASoD,WAAT,EAAsB,mBAAW;AAC7C,qBAAO,OAAKG,KAAL,CAAWpB,eAAX,CAA2BlC,QAAQY,QAAnC,EAA6CG,IAApD;AACD,aAFa,CAAd;;AAIA;AACA,gBAAI,KAAKuC,KAAL,CAAWxB,cAAX,CAA0BE,KAA1B,KAAoC,UAAxC,EAAoD;AAClDmB,4BAAcrD,EAAEwG,MAAF,CAASnD,WAAT,EAAsB,UAAtB,EAAkCoD,OAAlC,EAAd;AACD,aAFD,MAEO;AACLpD,4BAAcrD,EAAEwG,MAAF,CAASnD,WAAT,EAAsB,gBAAtB,EAAwCoD,OAAxC,EAAd;AACD;;AAED,mBAAOpD,WAAP;AACD;;;wCAEanD,O,EAAS;AACrB,gBAAIwG,aAAaxG,OAAjB;;AAEA;AACAA,oBAAQyG,cAAR,GAAyBC,OAAO1G,QAAQ2G,UAAf,CAAzB;AACA,gBAAInB,YAAYnF,OAAOoF,IAAP,CAAYzF,QAAQyG,cAApB,CAAhB;AACA,gBAAI,KAAKnD,KAAL,CAAWsC,sBAAf,EAAuC;AACrC;AACAY,yBAAWG,UAAX,GAAwBnB,UAAUM,MAAV,CAAiB,KAAKxC,KAAL,CAAWyC,gBAA5B,CAAxB;AACD,aAHD,MAGO;AACLS,yBAAWG,UAAX,GAAwBnB,UAAUM,MAAV,CAAiB,KAAKrD,iBAAtB,CAAxB;AACD;AACD+D,uBAAWI,GAAX,GAAiBpB,UAAUqB,OAAV,CAAkB,IAAlB,CAAjB;;AAEA;AACA,gBAAI7G,QAAQ8G,KAAR,CAAcT,MAAlB,EAA0B;AACxBG,yBAAWrF,IAAX,GAAkBnB,QAAQ8G,KAAR,CAAc,CAAd,EAAiBZ,IAAnC;AACAM,yBAAWO,YAAX,GAA0B/G,QAAQ8G,KAAR,CAAc,CAAd,EAAiB3F,IAA3C;AACD;;AAED;AACA,gBAAInB,QAAQgC,KAAR,KAAkB,GAAtB,EAA2B;AACzB;AACAwE,yBAAW1F,KAAX,GAAmB,KAAKwC,KAAL,CAAWpB,eAAX,CAA2BlC,QAAQY,QAAnC,EAA6CE,KAAhE;AACD,aAHD,MAGO;AACL;AACA0F,yBAAW1F,KAAX,GAAmB,KAAKwC,KAAL,CAAWnB,YAA9B;AACD;;AAEDqE,uBAAW3F,QAAX,GAAsB,KAAKyC,KAAL,CAAWpB,eAAX,CAA2BlC,QAAQY,QAAnC,EAA6CC,QAAnE;AACA,mBAAO2F,UAAP;AACD;;;wCAEaxG,O,EAAS;AACrBA,oBAAQgH,WAAR,GAAsB,CAAChH,QAAQgH,WAA/B;AACD;;;6CAEkBhH,O,EAASiH,O,EAAS;AACnC,gBAAI9B,UAAUnF,QAAQkF,SAAR,CAAkBC,OAAhC;AACA,gBAAI+B,eAAe,KAAKlE,UAAL,CAAgBgD,IAAhB,CAAqBE,IAAxC;AACA,gBAAIiB,cAAcD,eAAe,cAAf,GAAgCD,OAAlD;AACA,mBAAO,KAAKnE,aAAL,CAAmB0B,GAAnB,CAAuB,KAAKlB,KAAL,CAAWrC,UAAlC,EACNiD,IADM,CACD,sBAAc;AAClB,kBAAIkD,YAAYnG,WAAWwD,MAAX,CAAkB2C,SAAlC;AACA,qBAAOA,UAAUC,gBAAV,CAA2BlC,OAA3B,EAAoCgC,WAApC,CAAP;AACD,aAJM,EAKNjD,IALM,CAKD,KAAKN,SAAL,CAAeD,IAAf,CAAoB,IAApB,CALC,CAAP;AAMD;;;mDAEwB;AACvB,gBAAIrB,WAAW,KAAKgB,KAAL,CAAWhB,QAAX,IAAuB,EAAtC;AACA,gBAAIgF,WAAW,KAAKpE,SAAL,GAAiBZ,QAAhC;AACA,gBAAIiF,SAASC,KAAKC,GAAL,CAASH,WAAWhF,QAApB,EAA8B,KAAKa,WAAL,CAAiBkD,MAA/C,CAAb;AACA,iBAAKjD,mBAAL,GAA2B,KAAKD,WAAL,CAAiBgB,KAAjB,CAAuBmD,QAAvB,EAAiCC,MAAjC,CAA3B;AACA,mBAAO,KAAKnE,mBAAZ;AACD;;;+BAEIsE,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7B,gBAAIC,IAAJ;AACA,gBAAIxE,QAAQuE,KAAKvE,KAAjB;AACA,gBAAIyE,YAAY,CAAhB;AACAD,mBAAOD,KAAK1E,WAAZ;;AAEA,qBAAS6E,cAAT,GAA0B;AACxB,kBAAIC,cAAcJ,KAAKK,MAAvB;;AAEA,kBAAIH,YAAY,CAAhB,EAAmB;AACjBE,+BAAe,EAAf;AACD;;AAED,qBAAQA,cAAc,EAAf,GAAqB,IAA5B;AACD;;AAED,qBAASE,UAAT,CAAoBC,CAApB,EAAuB;AACrB,kBAAIC,KAAKjI,EAAEgI,EAAEE,aAAJ,CAAT;AACAT,mBAAK3E,SAAL,GAAkBqF,SAASF,GAAGtG,IAAH,EAAT,EAAoB,EAApB,IAAwB,CAA1C;;AAEA,kBAAIO,WAAWuF,KAAKvE,KAAL,CAAWhB,QAAX,IAAuB,EAAtC;AACA,kBAAIgF,WAAWO,KAAK3E,SAAL,GAAiBZ,QAAhC;AACA,kBAAIiF,SAASC,KAAKC,GAAL,CAASH,WAAWhF,QAApB,EAA8BuF,KAAK1E,WAAL,CAAiBkD,MAA/C,CAAb;AACAwB,mBAAKzE,mBAAL,GAA2ByE,KAAK1E,WAAL,CAAiBgB,KAAjB,CAAuBmD,QAAvB,EAAiCC,MAAjC,CAA3B;;AAEAG,oBAAMc,MAAN;AACAC;AACD;;AAED,qBAASC,wBAAT,CAAkCC,UAAlC,EAA8C;AAC5CA,yBAAWC,KAAX;;AAEA,kBAAItG,WAAWuF,KAAKvE,KAAL,CAAWhB,QAAX,IAAuB,CAAtC;AACAyF,0BAAYP,KAAKqB,IAAL,CAAUf,KAAKzB,MAAL,GAAc/D,QAAxB,CAAZ;AACA,kBAAIyF,cAAc,CAAlB,EAAqB;AACnB;AACD;;AAED,kBAAIe,YAAYtB,KAAKuB,GAAL,CAASlB,KAAK3E,SAAL,GAAiB,CAA1B,EAA6B,CAA7B,CAAhB;AACA,kBAAI8F,UAAUxB,KAAKC,GAAL,CAASM,SAAT,EAAoBe,YAAY,CAAhC,CAAd;;AAEA,kBAAIG,iBAAiB7I,EAAE,WAAF,CAArB;;AAEA,mBAAK,IAAI8I,IAAIJ,SAAb,EAAwBI,IAAIF,OAA5B,EAAqCE,GAArC,EAA0C;AACxC,oBAAIC,cAAcD,MAAMrB,KAAK3E,SAAX,GAAuB,QAAvB,GAAkC,EAApD;AACA,oBAAIkG,eAAehJ,EAAE,oDAAoD+I,WAApD,GAAkE,IAAlE,IAA0ED,IAAE,CAA5E,IAAiF,WAAnF,CAAnB;AACAD,+BAAeI,MAAf,CAAsBD,YAAtB;AACD;;AAEDT,yBAAWU,MAAX,CAAkBJ,cAAlB;AACD;;AAED,qBAASR,WAAT,GAAuB;AACrB,kBAAIa,YAAY3B,KAAK4B,OAAL,CAAa,QAAb,CAAhB;AACA,kBAAIC,WAAW7B,KAAKrC,IAAL,CAAU,wBAAV,CAAf;AACA,kBAAIqD,aAAahB,KAAKrC,IAAL,CAAU,wBAAV,CAAjB;;AAEAqC,mBAAK8B,GAAL,CAAS,EAAC,aAAanG,MAAMf,QAApB,EAAT;AACA+G,wBAAUI,QAAV,CAAmB,wBAAnB;AACAhB,uCAAyBC,UAAzB;;AAEAa,uBAASC,GAAT,CAAa,EAAC,cAAcnG,MAAMjB,MAAN,GAAe2F,gBAAf,GAAkC,EAAjD,EAAb;AACD;;AAEDL,iBAAKlE,EAAL,CAAQ,OAAR,EAAiB,2BAAjB,EAA8C0E,UAA9C;;AAEA,gBAAIwB,gBAAgBjC,MAAMkC,GAAN,CAAU,UAAV,EAAsB,YAAW;AACnDjC,mBAAKkC,GAAL,CAAS,OAAT,EAAkB,2BAAlB;AACAF;AACD,aAHmB,CAApB;;AAKA9B,iBAAKrE,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,UAACqG,UAAD,EAAgB;AACvChC,qBAAOgC,cAAchC,IAArB;AACA,kBAAIA,IAAJ,EAAU;AACRW;AACD;AACDZ,mBAAKkC,kBAAL;AACD,aAND;AAOD;;;;QAnS4BxJ,S;;AAsS/BmC,uBAAiBsH,WAAjB,GAA+B,4BAA/B;kCAeEtH,gB;;2BACAA,gB","file":"module.js","sourcesContent":["/**\r\n * Grafana-Zabbix\r\n * Zabbix plugin for Grafana.\r\n * http://github.com/alexanderzobnin/grafana-zabbix\r\n *\r\n * Trigger panel.\r\n * This feature sponsored by CORE IT\r\n * http://www.coreit.fr\r\n *\r\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\r\n * Licensed under the Apache License, Version 2.0\r\n */\r\n\r\nimport _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport moment from 'moment';\r\nimport {loadPluginCss} from 'app/plugins/sdk';\r\nimport * as utils from '../datasource-zabbix/utils';\r\nimport {PanelCtrl} from 'app/plugins/sdk';\r\nimport {triggerPanelEditor} from './editor';\r\nimport './ack-tooltip.directive';\r\n\r\nloadPluginCss({\r\n  dark: 'plugins/hzmc-onekeeper-app/css/grafana-zabbix.dark.css',\r\n  light: 'plugins/hzmc-onekeeper-app/css/grafana-zabbix.light.css'\r\n});\r\n\r\nvar defaultSeverity = [\r\n  { priority: 0, severity: 'Not classified',  color: '#B7DBAB', show: true },\r\n  { priority: 1, severity: 'Information',     color: '#82B5D8', show: true },\r\n  { priority: 2, severity: 'Warning',         color: '#E5AC0E', show: true },\r\n  { priority: 3, severity: 'Average',         color: '#C15C17', show: true },\r\n  { priority: 4, severity: 'High',            color: '#BF1B00', show: true },\r\n  { priority: 5, severity: 'Disaster',        color: '#890F02', show: true }\r\n];\r\n\r\nvar panelDefaults = {\r\n  datasource: null,\r\n  triggers: {\r\n    group: {filter: \"\"},\r\n    host: {filter: \"\"},\r\n    application: {filter: \"\"},\r\n    trigger: {filter: \"\"}\r\n  },\r\n  hostField: true,\r\n  statusField: false,\r\n  severityField: false,\r\n  lastChangeField: true,\r\n  ageField: true,\r\n  infoField: false,\r\n  limit: 10,\r\n  showTriggers: 'all triggers',\r\n  hideHostsInMaintenance: false,\r\n  sortTriggersBy: { text: 'last change', value: 'lastchange' },\r\n  showEvents: { text: 'Problems', value: '1' },\r\n  triggerSeverity: defaultSeverity,\r\n  okEventColor: 'rgba(0, 245, 153, 0.45)',\r\n  ackEventColor: 'rgba(0, 0, 0, 0)',\r\n  scroll: true,\r\n  pageSize: 10,\r\n  fontSize: '100%',\r\n};\r\n\r\nvar triggerStatusMap = {\r\n  '0': 'OK',\r\n  '1': 'Problem'\r\n};\r\n\r\nvar defaultTimeFormat = \"DD MMM YYYY HH:mm:ss\";\r\n\r\nclass TriggerPanelCtrl extends PanelCtrl {\r\n\r\n  /** @ngInject */\r\n  constructor($scope, $injector, $element, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\r\n    super($scope, $injector);\r\n    this.datasourceSrv = datasourceSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.contextSrv = contextSrv;\r\n    this.dashboardSrv = dashboardSrv;\r\n\r\n    this.triggerStatusMap = triggerStatusMap;\r\n    this.defaultTimeFormat = defaultTimeFormat;\r\n    this.pageIndex = 0;\r\n    this.triggerList = [];\r\n    this.currentTriggersPage = [];\r\n\r\n    // Load panel defaults\r\n    // _.cloneDeep() need for prevent changing shared defaultSeverity.\r\n    // Load object \"by value\" istead \"by reference\".\r\n    _.defaults(this.panel, _.cloneDeep(panelDefaults));\r\n\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('refresh', this.onRefresh.bind(this));\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', triggerPanelEditor, 2);\r\n  }\r\n\r\n  onRefresh() {\r\n    // ignore fetching data if another panel is in fullscreen\r\n    if (this.otherPanelInFullscreenMode()) { return; }\r\n\r\n    // clear loading/error state\r\n    delete this.error;\r\n    this.loading = true;\r\n\r\n    return this.refreshData()\r\n    .then(triggerList => {\r\n      // Limit triggers number\r\n      this.triggerList  = triggerList.slice(0, this.panel.limit);\r\n\r\n      this.getCurrentTriggersPage();\r\n\r\n      // Notify panel that request is finished\r\n      this.loading = false;\r\n\r\n      this.render(this.triggerList);\r\n    });\r\n  }\r\n\r\n  refreshData() {\r\n    return this.getTriggers()\r\n    .then(this.getAcknowledges.bind(this))\r\n    .then(this.filterTriggers.bind(this));\r\n  }\r\n\r\n  getTriggers() {\r\n    return this.datasourceSrv.get(this.panel.datasource)\r\n    .then(datasource => {\r\n      var zabbix = datasource.zabbix;\r\n      this.zabbix = zabbix;\r\n      this.datasource = datasource;\r\n      var showEvents = this.panel.showEvents.value;\r\n      var triggerFilter = this.panel.triggers;\r\n      var hideHostsInMaintenance = this.panel.hideHostsInMaintenance;\r\n\r\n      // Replace template variables\r\n      var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\r\n      var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\r\n      var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\r\n\r\n      let triggersOptions = {\r\n        showTriggers: showEvents,\r\n        hideHostsInMaintenance: hideHostsInMaintenance\r\n      };\r\n\r\n      return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\r\n    })\r\n    .then(triggers => {\r\n      return _.map(triggers, this.formatTrigger.bind(this));\r\n    });\r\n  }\r\n\r\n  getAcknowledges(triggerList) {\r\n    // Request acknowledges for trigger\r\n    var eventids = _.map(triggerList, trigger => {\r\n      return trigger.lastEvent.eventid;\r\n    });\r\n\r\n    return this.zabbix.getAcknowledges(eventids)\r\n    .then(events => {\r\n\r\n      // Map events to triggers\r\n      _.each(triggerList, trigger => {\r\n        var event = _.find(events, event => {\r\n          return event.eventid === trigger.lastEvent.eventid;\r\n        });\r\n\r\n        if (event) {\r\n          trigger.acknowledges = _.map(event.acknowledges, ack => {\r\n            let timestamp = moment.unix(ack.clock);\r\n            if (this.panel.customLastChangeFormat) {\r\n              ack.time = timestamp.format(this.panel.lastChangeFormat);\r\n            } else {\r\n              ack.time = timestamp.format(this.defaultTimeFormat);\r\n            }\r\n            ack.user = ack.alias + ' (' + ack.name + ' ' + ack.surname + ')';\r\n            return ack;\r\n          });\r\n\r\n          // Mark acknowledged triggers with different color\r\n          if (this.panel.markAckEvents && trigger.acknowledges.length) {\r\n            trigger.color = this.panel.ackEventColor;\r\n          }\r\n        }\r\n      });\r\n\r\n      return triggerList;\r\n    });\r\n  }\r\n\r\n  filterTriggers(triggerList) {\r\n    // Filter triggers by description\r\n    var triggerFilter = this.panel.triggers.trigger.filter;\r\n    triggerFilter = this.datasource.replaceTemplateVars(triggerFilter);\r\n    if (triggerFilter) {\r\n      triggerList = filterTriggers(triggerList, triggerFilter);\r\n    }\r\n\r\n    // Filter acknowledged triggers\r\n    if (this.panel.showTriggers === 'unacknowledged') {\r\n      triggerList = _.filter(triggerList, trigger => {\r\n        return !trigger.acknowledges;\r\n      });\r\n    } else if (this.panel.showTriggers === 'acknowledged') {\r\n      triggerList = _.filter(triggerList, 'acknowledges');\r\n    } else {\r\n      triggerList = triggerList;\r\n    }\r\n\r\n    // Filter triggers by severity\r\n    triggerList = _.filter(triggerList, trigger => {\r\n      return this.panel.triggerSeverity[trigger.priority].show;\r\n    });\r\n\r\n    // Sort triggers\r\n    if (this.panel.sortTriggersBy.value === 'priority') {\r\n      triggerList = _.sortBy(triggerList, 'priority').reverse();\r\n    } else {\r\n      triggerList = _.sortBy(triggerList, 'lastchangeUnix').reverse();\r\n    }\r\n\r\n    return triggerList;\r\n  }\r\n\r\n  formatTrigger(trigger) {\r\n    let triggerObj = trigger;\r\n\r\n    // Format last change and age\r\n    trigger.lastchangeUnix = Number(trigger.lastchange);\r\n    let timestamp = moment.unix(trigger.lastchangeUnix);\r\n    if (this.panel.customLastChangeFormat) {\r\n      // User defined format\r\n      triggerObj.lastchange = timestamp.format(this.panel.lastChangeFormat);\r\n    } else {\r\n      triggerObj.lastchange = timestamp.format(this.defaultTimeFormat);\r\n    }\r\n    triggerObj.age = timestamp.fromNow(true);\r\n\r\n    // Set host that the trigger belongs\r\n    if (trigger.hosts.length) {\r\n      triggerObj.host = trigger.hosts[0].name;\r\n      triggerObj.hostTechName = trigger.hosts[0].host;\r\n    }\r\n\r\n    // Set color\r\n    if (trigger.value === '1') {\r\n      // Problem state\r\n      triggerObj.color = this.panel.triggerSeverity[trigger.priority].color;\r\n    } else {\r\n      // OK state\r\n      triggerObj.color = this.panel.okEventColor;\r\n    }\r\n\r\n    triggerObj.severity = this.panel.triggerSeverity[trigger.priority].severity;\r\n    return triggerObj;\r\n  }\r\n\r\n  switchComment(trigger) {\r\n    trigger.showComment = !trigger.showComment;\r\n  }\r\n\r\n  acknowledgeTrigger(trigger, message) {\r\n    let eventid = trigger.lastEvent.eventid;\r\n    let grafana_user = this.contextSrv.user.name;\r\n    let ack_message = grafana_user + ' (Grafana): ' + message;\r\n    return this.datasourceSrv.get(this.panel.datasource)\r\n    .then(datasource => {\r\n      let zabbixAPI = datasource.zabbix.zabbixAPI;\r\n      return zabbixAPI.acknowledgeEvent(eventid, ack_message);\r\n    })\r\n    .then(this.onRefresh.bind(this));\r\n  }\r\n\r\n  getCurrentTriggersPage() {\r\n    let pageSize = this.panel.pageSize || 10;\r\n    let startPos = this.pageIndex * pageSize;\r\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\r\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\r\n    return this.currentTriggersPage;\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    var data;\r\n    var panel = ctrl.panel;\r\n    var pageCount = 0;\r\n    data = ctrl.triggerList;\r\n\r\n    function getTableHeight() {\r\n      var panelHeight = ctrl.height;\r\n\r\n      if (pageCount > 1) {\r\n        panelHeight -= 26;\r\n      }\r\n\r\n      return (panelHeight - 31) + 'px';\r\n    }\r\n\r\n    function switchPage(e) {\r\n      let el = $(e.currentTarget);\r\n      ctrl.pageIndex = (parseInt(el.text(), 10)-1);\r\n\r\n      let pageSize = ctrl.panel.pageSize || 10;\r\n      let startPos = ctrl.pageIndex * pageSize;\r\n      let endPos = Math.min(startPos + pageSize, ctrl.triggerList.length);\r\n      ctrl.currentTriggersPage = ctrl.triggerList.slice(startPos, endPos);\r\n\r\n      scope.$apply();\r\n      renderPanel();\r\n    }\r\n\r\n    function appendPaginationControls(footerElem) {\r\n      footerElem.empty();\r\n\r\n      var pageSize = ctrl.panel.pageSize || 5;\r\n      pageCount = Math.ceil(data.length / pageSize);\r\n      if (pageCount === 1) {\r\n        return;\r\n      }\r\n\r\n      var startPage = Math.max(ctrl.pageIndex - 3, 0);\r\n      var endPage = Math.min(pageCount, startPage + 9);\r\n\r\n      var paginationList = $('<ul></ul>');\r\n\r\n      for (var i = startPage; i < endPage; i++) {\r\n        var activeClass = i === ctrl.pageIndex ? 'active' : '';\r\n        var pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i+1) + '</a></li>');\r\n        paginationList.append(pageLinkElem);\r\n      }\r\n\r\n      footerElem.append(paginationList);\r\n    }\r\n\r\n    function renderPanel() {\r\n      var panelElem = elem.parents('.panel');\r\n      var rootElem = elem.find('.triggers-panel-scroll');\r\n      var footerElem = elem.find('.triggers-panel-footer');\r\n\r\n      elem.css({'font-size': panel.fontSize});\r\n      panelElem.addClass('triggers-panel-wrapper');\r\n      appendPaginationControls(footerElem);\r\n\r\n      rootElem.css({'max-height': panel.scroll ? getTableHeight() : '' });\r\n    }\r\n\r\n    elem.on('click', '.triggers-panel-page-link', switchPage);\r\n\r\n    var unbindDestroy = scope.$on('$destroy', function() {\r\n      elem.off('click', '.triggers-panel-page-link');\r\n      unbindDestroy();\r\n    });\r\n\r\n    ctrl.events.on('render', (renderData) => {\r\n      data = renderData || data;\r\n      if (data) {\r\n        renderPanel();\r\n      }\r\n      ctrl.renderingCompleted();\r\n    });\r\n  }\r\n}\r\n\r\nTriggerPanelCtrl.templateUrl = 'panel-triggers/module.html';\r\n\r\nfunction filterTriggers(triggers, triggerFilter) {\r\n  if (utils.isRegex(triggerFilter)) {\r\n    return _.filter(triggers, function(trigger) {\r\n      return utils.buildRegex(triggerFilter).test(trigger.description);\r\n    });\r\n  } else {\r\n    return _.filter(triggers, function(trigger) {\r\n      return trigger.description === triggerFilter;\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  TriggerPanelCtrl,\r\n  TriggerPanelCtrl as PanelCtrl\r\n};\r\n"]}