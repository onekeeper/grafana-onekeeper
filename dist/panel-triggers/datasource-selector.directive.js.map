{"version":3,"sources":["../../src/panel-triggers/datasource-selector.directive.js"],"names":["angular","_","template","module","directive","scope","datasources","options","onChange","controller","DatasourceSelectorCtrl","controllerAs","$scope","dsOptions","multi","current","value","text","join","map","ds","selected","includes","updatedOptions","newDataSources","$$postDigest"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;AACAC,O;;;;;;;;;;;;;;;;;;;;;AAEDC,c;;;AAKNF,cACCG,MADD,CACQ,oBADR,EAECC,SAFD,CAEW,oBAFX,EAEiC,YAAM;AACrC,eAAO;AACLC,iBAAO;AACLC,yBAAa,GADR;AAELC,qBAAS,GAFJ;AAGLC,sBAAU;AAHL,WADF;AAMLC,sBAAYC,sBANP;AAOLC,wBAAc,MAPT;AAQLT,oBAAUA;AARL,SAAP;AAUD,OAbD;;AAeMQ,4B;;AAEJ;AACA,wCAAYE,MAAZ,EAAoB;AAAA;;AAClB,eAAKP,KAAL,GAAaO,MAAb;AACA,cAAIN,cAAcM,OAAON,WAAzB;AACA,cAAIC,UAAUK,OAAOL,OAArB;AACA,eAAKM,SAAL,GAAiB;AACfC,mBAAO,IADQ;AAEfC,qBAAS,EAACC,OAAOV,WAAR,EAAqBW,MAAMX,YAAYY,IAAZ,CAAiB,KAAjB,CAA3B,EAFM;AAGfX,qBAASN,EAAEkB,GAAF,CAAMZ,OAAN,EAAe,UAACa,EAAD,EAAQ;AAC9B,qBAAO,EAACH,MAAMG,EAAP,EAAWJ,OAAOI,EAAlB,EAAsBC,UAAUpB,EAAEqB,QAAF,CAAWhB,WAAX,EAAwBc,EAAxB,CAAhC,EAAP;AACD,aAFQ;AAHM,WAAjB;AAOD;;;;mCAEQG,c,EAAgB;AAAA;;AACvB,gBAAIC,iBAAiBD,eAAeR,OAAf,CAAuBC,KAA5C;AACA,iBAAKX,KAAL,CAAWC,WAAX,GAAyBkB,cAAzB;;AAEA;AACA,iBAAKnB,KAAL,CAAWoB,YAAX,CAAwB,YAAM;AAC5B,oBAAKpB,KAAL,CAAWG,QAAX;AACD,aAFD;AAGD","file":"datasource-selector.directive.js","sourcesContent":["import angular from 'angular';\r\nimport _ from 'lodash';\r\n\r\nconst template = `\r\n<value-select-dropdown variable=\"ctrl.dsOptions\" on-updated=\"ctrl.onChange(ctrl.dsOptions)\">\r\n</value-select-dropdown>\r\n`;\r\n\r\nangular\r\n.module('grafana.directives')\r\n.directive('datasourceSelector', () => {\r\n  return {\r\n    scope: {\r\n      datasources: \"=\",\r\n      options: \"=\",\r\n      onChange: \"&\"\r\n    },\r\n    controller: DatasourceSelectorCtrl,\r\n    controllerAs: 'ctrl',\r\n    template: template\r\n  };\r\n});\r\n\r\nclass DatasourceSelectorCtrl {\r\n\r\n  /** @ngInject */\r\n  constructor($scope) {\r\n    this.scope = $scope;\r\n    let datasources = $scope.datasources;\r\n    let options = $scope.options;\r\n    this.dsOptions = {\r\n      multi: true,\r\n      current: {value: datasources, text: datasources.join(\" + \")},\r\n      options: _.map(options, (ds) => {\r\n        return {text: ds, value: ds, selected: _.includes(datasources, ds)};\r\n      })\r\n    };\r\n  }\r\n\r\n  onChange(updatedOptions) {\r\n    let newDataSources = updatedOptions.current.value;\r\n    this.scope.datasources = newDataSources;\r\n\r\n    // Run after model was changed\r\n    this.scope.$$postDigest(() => {\r\n      this.scope.onChange();\r\n    });\r\n  }\r\n}\r\n"]}